@model MyLittleUrlApp.Models.LittleUrl


@{
    ViewData["Title"] = "My Little Url";
}

<h1>My Little Url</h1>
<hr />

@using (Html.BeginForm("Fetch", "LittleUrl", FormMethod.Post))
{
<div class="form-group">
    <div class="input-group">
        <span class="input-group-addon">
            <i class="glyphicon glyphicon-wrench"></i>
        </span>
        <input asp-for="ShortUrl" id="urlkey" class="form-control input-lg" name="urlkey"
               placeholder="Enter Your Little Url here" required />
        <span asp-validation-for="ShortUrl" class="text-danger"></span>
    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row">
        <div class="col-md-2 col-md-offset-5">
            <button class="btn btn-default">Fetch</button>
        </div>
    </div>
</div>
}

@if (ViewData["ErrorMessage"] != null)
{
    <div class="well well-sm">
        <p class="text-danger">@ViewData["ErrorMessage"]</p>
    </div>

}

@if (Model != null)
{
<div class="well well-lg">
    <h2>Your <i>Not-so-</i>Little Url is:</h2>
    <div class="input-group">
        <span class="input-group-addon">
            <i class="glyphicon glyphicon-link"></i>
        </span>
        <input readonly id="urlDecoded" class="form-control input-lg" name="urlDecoded" style="background-color:ghostwhite"
               value="@Html.DisplayFor(model => model.LongUrl)" />
    </div>


</div>
}


